apiVersion: v1
kind: Namespace
metadata:
  name: knative-scout
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: app-api-config
  namespace: knative-scout
data:
  mongoUser: knative-scout-app-api-dev
  mongoDbName: knative-scout-app-api-dev
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo
  namespace: knative-scout
  labels:
    app: mongo
spec:
  selector:
    matchLabels:
      app: mongo
  serviceName: mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
        - name: mongo
          image: mongo:latest
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: app-api-config
                  key: mongoUser
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongo-credentials
                  key: password
            - name: MONGO_INITDB_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: app-api-config
                  key: mongoDbName
          ports:
            - name: mongo
              containerPort: 27017
          volumeMounts:
            - name: mongo
              mountPath: /data/db
  volumeClaimTemplates:
  - metadata:
      name: mongo
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 5Gi
---
apiVersion: v1
kind: Service
metadata:
  name: mongo
  namespace: knative-scout
  labels:
    app: mongo
spec:
  selector:
    app: mongo
  ports:
    - port: 27017
      name: mongo
      targetPort: mongo
      protocol: TCP
---  
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-api
  namespace: knative-scout
  labels:
    app: app-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app-api
  template:
    metadata:
      labels:
        app: app-api
    spec:
      containers:
        - name: app-api
          image: docker.io/kscout/app-api:dev-latest
          imagePullPolicy: Always
          env:
            - name: APP_HTTP_ADDR
              value: ":5000"
            - name: APP_DB_USER
              valueFrom:
                configMapKeyRef:
                  name: app-api-config
                  key: mongoUser
            - name: APP_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongo-credentials
                  key: password
            - name: APP_DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: app-api-config
                  key: mongoDbName
            - name: APP_DB_HOST
              value: $(MONGO_SERVICE_HOST)
          ports:
            - name: http
              containerPort: 5000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
              scheme: HTTP
          readinessProbe:
            httpGet:
              path: /health
              port: http
              scheme: HTTP
---
apiVersion: v1
kind: Service
metadata:
  name: app-api
  namespace: knative-scout
  labels:
    app: app-api
spec:
  type: ClusterIP
  selector:
    app: app-api
  ports:
    - protocol: TCP
      port: 80
      targetPort: http
      name: http
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: app-api
  namespace: knative-scout
  labels:
    app: app-api
  annotations:
    kubernetes.io/ingress.class: "nginx"
spec:
  rules:
    - host: api.kscout.io
      http:
        paths:
          - backend:
              serviceName: app-api
              servicePort: http
