apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .config.env }}-db-config
data:
  mongoUser: {{ .config.env }}-kscout-serverless-registry-api
  mongoDbName: {{ .config.env }}-kscout-serverless-registry-api
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .config.env }}-mongo
  labels:
    app: mongo
    env: {{ .config.env }}
spec:
  selector:
    matchLabels:
      app: mongo
      env: {{ .config.env }}
  serviceName: {{ .config.env }}-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: mongo
        env: {{ .config.env }}
    spec:
      containers:
        - name: mongo
          image: mongo:latest
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: {{ .config.env }}-db-config
                  key: mongoUser
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .config.env }}-mongo-credentials
                  key: password
            - name: MONGO_INITDB_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: {{ .config.env }}-db-config
                  key: mongoDbName
          ports:
            - name: mongo
              containerPort: 27017
          volumeMounts:
            - name: mongo
              mountPath: /data/db
  volumeClaimTemplates:
  - metadata:
      name: mongo
      labels:
        app: mongo
        env: {{ .config.env }}
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 5Gi
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .config.env }}-mongo
  labels:
    app: mongo
    env: {{ .config.env }}
spec:
  selector:
    app: mongo
    env: {{ .config.env }}
  ports:
    - port: 27017
      name: mongo
      targetPort: mongo
      protocol: TCP
